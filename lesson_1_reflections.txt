How did viewing a diff between two versions of a file help you see the bug that was introduced?

It defenetly made me spot the difference faster, 
and that would be especially useful
in files with plenty lines of code!

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

In case something goes wrong i can always go back to a functioning version
of the file. I can also compare my thinking back in an older version with
a newer version of the file.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

You can save only when its just the right time, and it makes sence to save. One Commit Per Logical Change

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because programmers often need to keep track of many files simalteniously since parts of one function can be 
in a different file.

How can you use the commands git log and git diff to view the history of files?

Git log finds the different commit ids which i will use to compare withh git diff.

How might using version control make you more confident to make changes that could break something?

You can revert to an older version which wont be buggy.

Now that you have your workspace set up, what do you want to try using Git for?

I want to finally use it with ease